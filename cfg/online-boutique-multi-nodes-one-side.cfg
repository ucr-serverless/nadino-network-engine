# Copyright 2022 University of California, Riverside
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name = "Multi-node Online Boutique";

nfs = (
    {
        id = 1;
        name = "frontendservice";

        n_threads = 32;

        params = {
            memory_mb = 0;
            sleep_ns = 0;
            compute = 0;
        };

        node = 0;
    },
    {
        id = 2;
        name = "currencyservice";

        n_threads = 32;

        params = {
            memory_mb = 0;
            sleep_ns = 0;
            compute = 0;
        };

        node = 1;
    },
    {
        id = 3;
        name = "productcatalogservice";

        n_threads = 32;

        params = {
            memory_mb = 0;
            sleep_ns = 0;
            compute = 0;
        };

        node = 1;
    },
    {
        id = 4;
        name = "cartservice";

        n_threads = 32;

        params = {
            memory_mb = 0;
            sleep_ns = 0;
            compute = 0;
        };

        node = 1;
    },
    {
        id = 5;
        name = "recommendationservice";

        n_threads = 32;

        params = {
            memory_mb = 0;
            sleep_ns = 0;
            compute = 0;
        };

        node = 0;
    },
    {
        id = 6;
        name = "shippingservice";

        n_threads = 32;

        params = {
            memory_mb = 0;
            sleep_ns = 0;
            compute = 0;
        };

        node = 1;
    },
    {
        id = 7;
        name = "checkoutservice";

        n_threads = 32;

        params = {
            memory_mb = 0;
            sleep_ns = 0;
            compute = 0;
        };

        node = 0;
    },
    {
        id = 8;
        name = "paymentservice";

        n_threads = 32;

        params = {
            memory_mb = 0;
            sleep_ns = 0;
            compute = 0;
        };

        node = 1;
    },
    {
        id = 9;
        name = "emailservice";

        n_threads = 32;

        params = {
            memory_mb = 0;
            sleep_ns = 0;
            compute = 0;
        };

        node = 1;
    },
    {
        id = 10;
        name = "adservice";

        n_threads = 32;

        params = {
            memory_mb = 0;
            sleep_ns = 0;
            compute = 0;
        };

        node = 1;
    }
);

routes = (
    {
        id = 1;
        name = "GET /";

        hops = [1, 2, 1, 3, 1, 4, 1, 2, 1, 10, 1];
    },
    {
        id = 2;
        name = "POST /setCurrency";

        hops = [1];
    },
    {
        id = 3;
        name = "GET /product/$ID";

        hops = [1, 3, 1, 2, 1, 4, 1, 2, 1, 5, 1, 4, 1, 10, 1];
    },
    {
        id = 4;
        name = "GET /cart";

        hops = [1, 2, 1, 4, 1, 5, 1, 6, 1, 2, 1, 3, 1, 2, 1];
    },
    {
        id = 5;
        name = "POST /cart";

        hops = [1, 3, 1, 4, 1];
    },
    {
        id = 6;
        name = "POST /cart/checkout";

        hops = [1, 7, 4, 7, 3, 7, 2, 7, 6, 7, 2, 7, 8, 7, 6, 7, 4, 7, 9, 7, 1, 5, 1, 2, 1];
    }
);

nodes = (
    {
        id = 0;
        hostname = "node0.22.kkprojects-pg0.utah.cloudlab.us";

        ip_address = "10.10.1.1";
        port = 8083;
        control_server_port = 8085;

        // RDMA device index
        device_idx = 2;
        sgid_idx = 3;
        ib_port = 1;
        // how many qps one node should init
        qp_num = 10;
    },
    {
        id = 1;
        hostname = "node1.22.kkprojects-pg0.utah.cloudlab.us";

        ip_address = "10.10.1.2";
        port = 8083;
        control_server_port = 8085;

        // RDMA device index
        device_idx = 2;
        sgid_idx = 3;
        ib_port = 1;
        // how many qps one node should init
        qp_num = 10;
    }
);

tenants = (
    {
        id = 0;
        weight = 5;
    },
    {
        id = 1;
        weight = 1;
    },
    {
        id = 2;
        weight = 3;
    }
);

auto_scaler = {
    hostname = "node2.22.kkprojects-pg0.utah.cloudlab.us";
    ip_address = "10.10.1.2";
    port = 8086;

};

rdma_settings = {
    local_mempool_size = 32768;
    // 1: use rdma 0: use tcp socket
    use_rdma = 1;
    // 1: use one-side 0: ues_two-side
    use_one_side = 1;
    // size of single slot in a memory region (KB)
    slot_size = 4;
    // size of a single memory region (KB)
    mr_size = 1024;
    mr_per_qp = 3276; 
    init_cqe_num = 10000;
    max_send_wr = 128;
}
